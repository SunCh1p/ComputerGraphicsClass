
// class Scene : public Component{
//     public:
//         Scene(Vector3 position = Vector3(0,0,0)): Component(position){}
//         void draw(Vector3 parentPosition = {0,0,0}, bool drawAxis, char mode) const override{
//             //get position in world
//             Vector3 globalPosition = parentPosition + m_position;
//             //draw all m_children relative to current position
//             for(auto& it: m_children){
//                 it->draw(globalPosition, drawAxis, mode);
//             }
//         }
//         void addChild(std::unique_ptr<Component> child) override{
//             //move unique ptr into container
//             m_children.push_back(std::move(child));
//         }
//     private:
//         std::vector<std::unique_ptr<Component>> m_children;
// };

// void init(){
//     /*select clearing background color*/
//     glClearColor(0.0, 0.0, 0.0, 0.0);
//     glMatrixMode(GL_PROJECTION);
//     glLoadIdentity();
//     gluPerspective(45.0, (double)WIN_W / WIN_H, 0.1, 100.0);
//     glMatrixMode(GL_MODELVIEW);
//     glLoadIdentity();
//     gluLookAt(
//         0.0, 2, 10.0,  // camera position
//         0.0, 0.0, 0.0,   // look at origin
//         0.0, 1.0, 0.0    // up vector
//     );
// }
